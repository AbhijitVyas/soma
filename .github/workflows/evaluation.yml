name: Evaluation
on:
  push:
    paths:
      - '**'
      - '!docs/**'
  pull_request:
    paths:
      - '**'
      - '!docs/**'
  release:
    types: [created]
    paths:
      - '**'
      - '!docs/**'

jobs:
  compile:
    name: Compile SOMA
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Compile current
        if: startsWith(github.ref, 'refs/tags/') != true
        uses: docker://swipl:8.0.3
        with:
          SOMA_VERSION: current
          args: swipl -f prolog/uglify.pl -t uglify

      - name: Compile tag
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker://swipl:8.0.3
        with:
          SOMA_VERSION: ${{ github.event.release.tag_name }}
          args: swipl -f prolog/uglify.pl -t uglify

      - name: Convert
        uses: ./.github/actions/convert
        with:
          args: python3 ./scripts/uglify_ease_as_owl.py

      - name: Upload OWL file
        uses: actions/upload-artifact@v1
        with:
          name: SOMA OWL
          path: ./build/SOMA.owl
  
  pitfalls:
    name: OOPS
    runs-on: ubuntu-latest
    needs: compile

    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - uses: actions/download-artifact@v1
        with:
          name: SOMA OWL
          path: ./build
      
      - name: Setup Python
        uses: actions/setup-python@v2
      
      - name: Install python dependencies
        run: |
          sudo python -m pip install --upgrade pip
          sudo pip install requests

      - name: Find pitfalls
        run: sudo python ./scripts/oops.py $GITHUB_WORKSPACE/build/SOMA.owl $GITHUB_WORKSPACE/build

      - name: Generate annotations
        run: sudo python ./scripts/oops-github.py $GITHUB_WORKSPACE/build/oops.xml

      - name: Upload pitfalls
        uses: actions/upload-artifact@v1
        with:
          name: OOPS Results
          path: ./build/oops.xml
  
  consistency:
    name: HermiT
    runs-on: ubuntu-latest
    needs: compile

    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - uses: actions/download-artifact@v1
        with:
          name: SOMA OWL
          path: ./build

      - name: HermiT
        uses: ./.github/actions/hermit
        with:
          args: ./build/SOMA.owl

      - name: Print HermiT output
        run: cat ./hermit.output
        if: always()

      - name: Evaluate HermiT output
        if: success()
        uses: docker://python:3.7.6-slim
        with:
          args: python ./scripts/hermit_test.py -o ./owl/hermit.html ./hermit.output

